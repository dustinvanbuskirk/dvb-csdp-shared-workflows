apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: shared-gitops-promotion
spec:
  entrypoint: deploy-and-promote
  serviceAccountName: shared-gitops-promotion
  templates:
    - name: deploy-and-promote
      inputs:
        parameters:
          - name: ARGOCD_APP
          - name: ARGOCD_SERVER
            default: argocd-server
          - name: REPO_OWNER
          - name: REPO_URL
          - name: PROMOTION_SOURCE_FILE
          - name: PROMOTION_TARGET_FILE
            default: 'nil'
          - name: TARGET_DEPLOYMENT_BRANCH
            default: 'main'
          - name: TARGET_DEPLOYMENT_REPOSITORY
          - name: SOURCE_DEPLOYMENT_BRANCH
            default: 'main'
          - name: SOURCE_FILE_PATH_PREFIX
          - name: TARGET_FILE_PATH_PREFIX
          - name: GIT_TOKEN_SECRET
            default: 'github-token'
          - name: KEY
            default: '.image.tag'
          - name: KUSTOMIZE_REPOSITORY
          - name: KUSTOMIZE_BRANCH
          - name: KUSTOMIZE_FILE_PATH_PREFIX
          - name: KUSTOMIZE_FILE
          - name: REVISION
      dag:
        tasks:
          # Clone Applications Repository
          - name: clone-apps-repo
            templateRef:
              name: argo-hub.git.0.0.2
              template: clone
            arguments:
              parameters:
                - name: REPO_URL
                  value: 'https://github.com/{{inputs.parameters.REPO_OWNER}}/{{ inputs.parameters.KUSTOMIZE_REPOSITORY }}.git'
                - name: REVISION
                  value: '{{ inputs.parameters.KUSTOMIZE_BRANCH }}'
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
          # Update values file URL for Kustomize Application
          - name: update-kustomize-file
            template: promote-candidate
            arguments:
              parameters:
                - name: KEY
                  value: '.helmCharts[0].valuesFile'
                - name: VALUE
                  value: '"https://raw.githubusercontent.com/{{inputs.parameters.REPO_OWNER}}/{{ inputs.parameters.KUSTOMIZE_REPOSITORY }}/{{ inputs.parameters.REVISION }}/{{ inputs.parameters.SOURCE_FILE_PATH_PREFIX }}/{{ inputs.parameters.PROMOTION_SOURCE_FILE}}"'
                - name: FILE
                  value: '{{ inputs.parameters.KUSTOMIZE_FILE }}'
                - name: FILE_PATH_PREFIX
                  value: '{{ inputs.parameters.KUSTOMIZE_FILE_PATH_PREFIX }}'
              artifacts:
                - name: repo
                  from: '{{ tasks.clone-apps-repo.outputs.artifacts.repo }}'
            depends: clone-apps-repo
          # GitOps Update Kustomize File (Applications Repository)
          - name: gitops-update-kustomize
            template: gitops-promotion
            arguments:
              parameters:
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                - name: FILE
                  value: '{{ inputs.parameters.KUSTOMIZE_FILE }}'
                - name: FILE_PATH_PREFIX
                  value: '{{ inputs.parameters.KUSTOMIZE_FILE_PATH_PREFIX }}'
                - name: BRANCH
                  value: '{{ inputs.parameters.KUSTOMIZE_BRANCH }}'
                - name: REPO_NAME
                  value: '{{ inputs.parameters.KUSTOMIZE_REPOSITORY }}'
                - name: REPO_OWNER
                  value: '{{ inputs.parameters.REPO_OWNER }}'
              artifacts:
                - name: repo
                  from: '{{ tasks.update-kustomize-file.outputs.artifacts.repo }}'
            depends: update-kustomize-file
          # Sync Application
          - name: argocd-sync
            templateRef:
              name: argo-hub.argocd.0.0.1
              template: sync
            arguments:
              parameters:
              - name: app
                value: '{{ inputs.parameters.ARGOCD_APP }}'
              - name: serverUrl
                value: '{{ inputs.parameters.ARGOCD_SERVER }}'
              - name: opts
                value: '--insecure --plaintext'
              - name: flags
                value: '--prune'
            depends: gitops-update-kustomize
          # Run Deployment Verification Tests
        #   - name: run-dvts
        #     template: run-dvts
        #     depends: argocd-sync
          # Clone Source Repository
          - name: clone-source-repo
            templateRef:
              name: argo-hub.git.0.0.2
              template: clone
            arguments:
              parameters:
                - name: REPO_URL
                  value: '{{ inputs.parameters.REPO_URL }}'
                - name: REVISION
                  value: '{{ inputs.parameters.SOURCE_DEPLOYMENT_BRANCH }}'
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
            depends: argocd-sync
            when: '"{{ inputs.parameters.PROMOTION_TARGET_FILE }}" != "nil"'
          # Check Source / Debugging
        #   - name: check-source
        #     template: check-source
        #     arguments:
        #       artifacts:
        #         - name: repo
        #           from: '{{ tasks.clone-source-repo.outputs.artifacts.repo }}'
        #     depends: clone-source-repo
        #     when: '"{{ inputs.parameters.PROMOTION_TARGET_FILE }}" != "nil"'
          # Find Promotion Candidate Image
          - name: find-promotion-candidate
            template: find-promotion-candidate
            arguments:
              parameters:
                - name: KEY
                  value: '{{ inputs.parameters.KEY }}'
              artifacts:
                - name: repo
                  from: '{{ tasks.clone-source-repo.outputs.artifacts.repo }}'
            depends: clone-source-repo
            when: '"{{ inputs.parameters.PROMOTION_TARGET_FILE }}" != "nil"'
          # Clone Target Repository
          - name: clone-target-repo
            templateRef:
              name: argo-hub.git.0.0.2
              template: clone
            arguments:
              parameters:
                - name: REPO_URL
                  value: '{{ inputs.parameters.REPO_URL }}'
                - name: REVISION
                  value: '{{ inputs.parameters.TARGET_DEPLOYMENT_BRANCH }}'
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
            depends: find-promotion-candidate
            when: '"{{ inputs.parameters.PROMOTION_TARGET_FILE }}" != "nil"'
          # Promote Candidate Image
          - name: promote-candidate
            template: promote-candidate
            arguments:
              parameters:
                - name: KEY
                  value: '{{ inputs.parameters.KEY }}'
                - name: VALUE
                  value: '{{ tasks.find-promotion-candidate.outputs.parameters.value }}'
                - name: FILE
                  value: '{{ inputs.parameters.PROMOTION_TARGET_FILE }}'
                - name: FILE_PATH_PREFIX
                  value: '{{ inputs.parameters.TARGET_FILE_PATH_PREFIX }}'
              artifacts:
                - name: repo
                  from: '{{ tasks.clone-target-repo.outputs.artifacts.repo }}'
            depends: clone-target-repo
            when: '"{{ inputs.parameters.PROMOTION_TARGET_FILE }}" != "nil"'
          # GitOps Promote Candidate Image
          - name: gitops-promotion
            template: gitops-promotion
            arguments:
              parameters:
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                - name: FILE
                  value: '{{ inputs.parameters.PROMOTION_TARGET_FILE }}'
                - name: FILE_PATH_PREFIX
                  value: '{{ inputs.parameters.TARGET_FILE_PATH_PREFIX }}'
                - name: BRANCH
                  value: '{{ inputs.parameters.TARGET_DEPLOYMENT_BRANCH }}'
                - name: REPO_NAME
                  value: '{{ inputs.parameters.REPO_NAME }}'
                - name: REPO_OWNER
                  value: '{{ inputs.parameters.REPO_OWNER }}'
              artifacts:
                - name: repo
                  from: '{{ tasks.promote-candidate.outputs.artifacts.repo }}'
            depends: promote-candidate
            when: '"{{ inputs.parameters.PROMOTION_TARGET_FILE }}" != "nil"'
    # Run Deployment Verification Tests
    # - name: run-dvts
    #   container:
    #     image: 'alpine'
    #     command: [sh, -c]
    #     args: ['ls']
    # Check Source / Debugging
    # - name: check-source
    #   inputs:
    #     artifacts:
    #       - name: repo
    #         path: /tmp/repo
    #   script:
    #     image: 'alpine'
    #     command: [sh]
    #     source: |
    #       ls {{ inputs.artifacts.repo.path }}
    # Find Promotion Candidate Image
    - name: find-promotion-candidate
      inputs:
        artifacts:
          - name: repo
            path: /tmp/repo
        parameters:
          - name: KEY
            value: '{{ inputs.parameters.KEY }}'
      outputs:
        parameters:
          - name: value
            valueFrom:
              path: /tmp/value.txt
      script:
        image: 'quay.io/codefresh/cli'
        command: [sh]
        source: |
          yq '{{ inputs.parameters.KEY }}' {{ inputs.artifacts.repo.path }}/{{ workflow.parameters.SOURCE_FILE_PATH_PREFIX }}/{{ workflow.parameters.PROMOTION_SOURCE_FILE }}  > /tmp/value.txt
          cat /tmp/value.txt
    # Promote Candidate Image
    - name: promote-candidate
      inputs:
        artifacts:
          - name: repo
            path: /tmp/repo
        parameters:
          - name: KEY
            value: '{{ inputs.parameters.KEY }}'
          - name: VALUE
            value: '{{ inputs.parameters.VALUE }}'
          - name: FILE_PATH_PREFIX
            value: '{{ inputs.parameters.FILE_PATH_PREFIX }}'
          - name: FILE
            value: '{{ inputs.parameters.FILE }}'
      outputs:
        artifacts:
          - name: repo
            path: /tmp/repo
      script:
        image: 'quay.io/codefresh/cli'
        command: [sh]
        source: |
          yq -i -y '{{ inputs.parameters.KEY }} = {{ inputs.parameters.VALUE }}' {{ inputs.artifacts.repo.path }}/{{ inputs.parameters.FILE_PATH_PREFIX }}/{{ inputs.parameters.FILE }}
    # GitOps Promote Candidate Image
    - name: gitops-promotion
      inputs:
        artifacts:
          - name: repo
            path: /tmp/repo
        parameters:
          - name: GIT_TOKEN_SECRET
            value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
          - name: PROMOTION_TARGET_FILE
            value: '{{ inputs.parameters.PROMOTION_TARGET_FILE }}'
          - name: FILE_PATH_PREFIX
            value: '{{ inputs.parameters.TARGET_FILE_PATH_PREFIX }}'
      container:
        image: 'dustinvanbuskirk/jsonnet-gitops-step:1.0.1'
        env:
          - name: BRANCH
            value: '{{ input.parameters.BRANCH }}'
          - name: TARGET_FILE
            value: '{{ input.parameters.FILE_PATH_PREFIX }}/{{ input.parameters.FILE }}'
          - name: BUILD_URL
            value: 'https://g.codefresh.io/2.0/workflows/{{ workflow.name}}'
          - name: WORKING_DIRECTORY
            value: '{{ inputs.artifacts.repo.path }}/{{ input.parameters.FILE_PATH_PREFIX }}'
          - name: REPO_OWNER
            value: '{{ inputs.parameters.REPO_OWNER }}'
          - name: REPO_NAME
            value: '{{ inputs.parameters.REPO_NAME }}'
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                key: token
          - name: FILE
            value: '{{ inputs.parameters.FILE }}'
        command: [python3]
        args: [/github-committer.py]
